@page "/article/{FolderName}/{FileName}"
@inject IJSRuntime JSRuntime;
@using System.Globalization;

@if (_markDownDocument is null)
{
    <div>
        <SpinnerIndicator />
    </div>
}
else
{
    @((MarkupString)_markDownDocument)
}

@code {
    [Parameter]
    public string FolderName { get; set; }

    [Parameter]
    public string FileName { get; set; }

    private string _markDownDocument;
    private GithubHandler _githubHandler;
    private MarkdownParser _markdownParser;

    protected override async Task OnInitializedAsync()
    {
        await JSRuntime.InvokeVoidAsync("setTitle", CultureInfo.CurrentCulture.TextInfo.ToTitleCase(FolderName));

        try
        {
            _githubHandler = new GithubHandler();
            _markdownParser = new MarkdownParser();

            var content = await _githubHandler.GetArticleContentAsync($"{FolderName}/{FileName}");
            _markDownDocument = _markdownParser.ParseContentToHtml(content);
        }
        catch (System.Exception e)
        {
            _markDownDocument = e.Message;
        }
    }
}